{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9\nAdded\nWe've added support for LuaJIT imaginary numbers which also resulted in the following being added:\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9-beta.5\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9-beta.4\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9-beta.3\nAdded\nTyped Lua Support.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9-beta.2\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with the option to enable number extraction from strings.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.13\nFixed\nFixed \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q double-freeing a slot.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.12\nFixed\nFixed \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q renaming variables that were being used incorrectly.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.11\nFixed\nFixed infinite loop on variable rename conflict.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.10\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.9\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q which lets you check scopes contained within another scope.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.8\nAdded\nAdded a minifier to the experimental package.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAdded support for the Lua 5.1 and Luau lexing bug that makes them silently accept invalid single-char escapes (e.g.: `\"\\A\\B\\C\\D\" will be read as \"ABCD\" silently without any errors or warnings).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.7\nAdded\nAdded \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.6\nAdded\nAdded support for FiveM's hash strings (thanks to @TheGreatSageEqualToHeaven).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.5\nAdded\nAdded support for Luau's if expression.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.4\nChanged\nFixed a typo in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and its helper methods.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.3\nRemoved\nRemoved unused classes we got when vendoring Roslyn, of which, the following were public:\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.2\nAdded\nAdd support for implicit \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameter in methods.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.1\nAdded\nAdd note about non-\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q rooted trees in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.6\nAdded\nAdd better formatting for tables when they're multiline.\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QFixed\nScoping\nFix \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q handling to:\nNot always add it as a write when it's part of a composite name.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.5\nAdded\nAdd parameterless ctor of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q for easier creation of empty scripts.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.4\nAdded\nAdd nuget params to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\nAdd CD flow to publish packages to a public myget.org (not nuget.org) feed.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QChanged\nBreaking Changed what is accepted as whitespace to not be unicode-aware (as lua isn't);\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QBreaking The following were changed as a result of implementing local variable attributes:\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q now returns a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instead of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q now receives a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instead of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q now receives a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instead of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q now receives a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instead of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q overloads now receive a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q instead of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q constructor and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q method now accept an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameter.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QChanged the generated statement in the case of a missing expression (now it is an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q set to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and the inner expression is the one in the bullet point above).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.7-beta.2\nAdded support for implicit \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameter in methods.\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QAdd support for \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in variable handling (local vars didn't have a write added to them and a global wasn't created if a local with the same name didn't exist).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QAdded\nImplemented \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q whitespace voider escape for short strings;\nImplemented \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as an attempt to reduce allocations when lexing;\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.2\nChanged\nBreaking Only store \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qs that directly reference a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\nBreaking Move \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as it is not applicable to non-function scopes;\nUpdated the README with instructions and documentation on v0.2.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.10\nAdded\nAdded the following new \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q overloads to partially restore compatibility with pre-typed-lua era:\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\n\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.11\nFixed\nFixed \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q not being populated.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.9-beta.1\nChanged\nOptimized the lexing process with a reduction of 80% in lexing time and 76% in parsing time.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.8\nAdded\nAdded support for string length to the constant folder.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QFixed\nFix parameters not having an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q associated with them.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qv0.2.4\nAdded\nAdd nuget params to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\nAdd CD flow to publish packages to a public myget.org (not nuget.org) feed.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qv0.2.12\nFixed\nFixed \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q not suppressing errors in cases where \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q were \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q by @TheGreatSageEqualToHeaven in https://github.com/LorettaDevs/Loretta/pull/116.\\E$"}
