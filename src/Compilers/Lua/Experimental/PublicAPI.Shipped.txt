#nullable enable
Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions
Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions.ConstantFoldingOptions(bool ExtractNumbersFromStrings) -> void
Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions.ExtractNumbersFromStrings.get -> bool
Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions.ExtractNumbersFromStrings.init -> void
Loretta.CodeAnalysis.Lua.Experimental.LuaExtensions
Loretta.CodeAnalysis.Lua.Experimental.Minifying.ISlotAllocator
Loretta.CodeAnalysis.Lua.Experimental.Minifying.ISlotAllocator.AllocateSlot() -> int
Loretta.CodeAnalysis.Lua.Experimental.Minifying.ISlotAllocator.ReleaseSlot(int slot) -> void
Loretta.CodeAnalysis.Lua.Experimental.Minifying.MinifyingUtils
Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategies
Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategy
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SequentialSlotAllocator
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SequentialSlotAllocator.AllocateSlot() -> int
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SequentialSlotAllocator.ReleaseSlot(int slot) -> void
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SequentialSlotAllocator.SequentialSlotAllocator() -> void
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SortedSlotAllocator
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SortedSlotAllocator.AllocateSlot() -> int
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SortedSlotAllocator.ReleaseSlot(int slot) -> void
Loretta.CodeAnalysis.Lua.Experimental.Minifying.SortedSlotAllocator.SortedSlotAllocator() -> void
Loretta.CodeAnalysis.Lua.Experimental.SyntaxExtensions
static Loretta.CodeAnalysis.Lua.Experimental.LuaExtensions.ConstantFold(this Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions! options) -> Loretta.CodeAnalysis.SyntaxNode!
static Loretta.CodeAnalysis.Lua.Experimental.LuaExtensions.Minify(this Loretta.CodeAnalysis.SyntaxTree! tree, Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategy! namingStrategy, Loretta.CodeAnalysis.Lua.Experimental.Minifying.ISlotAllocator! slotAllocator) -> Loretta.CodeAnalysis.SyntaxTree!
static Loretta.CodeAnalysis.Lua.Experimental.LuaExtensions.Minify(this Loretta.CodeAnalysis.SyntaxTree! tree, Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategy! namingStrategy) -> Loretta.CodeAnalysis.SyntaxTree!
static Loretta.CodeAnalysis.Lua.Experimental.LuaExtensions.Minify(this Loretta.CodeAnalysis.SyntaxTree! tree) -> Loretta.CodeAnalysis.SyntaxTree!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.MinifyingUtils.CanRename(Loretta.CodeAnalysis.Lua.IVariable! variable) -> bool
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.MinifyingUtils.GetUnavailableNames(Loretta.CodeAnalysis.Lua.IScope! scope) -> System.Collections.Immutable.IImmutableSet<string!>!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.MinifyingUtils.GetUnavailableNames(System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Lua.IScope!>! scopes) -> System.Collections.Immutable.IImmutableSet<string!>!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategies.Alphabetical(int slot, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Lua.IScope!>! scopes) -> string!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategies.Numerical(int slot, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Lua.IScope!>! scopes) -> string!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategies.Sequential(char prefix, System.Collections.Immutable.ImmutableArray<string!> alphabet) -> Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategy!
static Loretta.CodeAnalysis.Lua.Experimental.Minifying.NamingStrategies.ZeroWidth(int slot, System.Collections.Generic.IEnumerable<Loretta.CodeAnalysis.Lua.IScope!>! scopes) -> string!
static Loretta.CodeAnalysis.Lua.Experimental.SyntaxExtensions.FoldConstants(this Loretta.CodeAnalysis.SyntaxNode! node, Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions! options) -> Loretta.CodeAnalysis.SyntaxNode!
static readonly Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions.All -> Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions!
static readonly Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions.Default -> Loretta.CodeAnalysis.Lua.Experimental.ConstantFoldingOptions!
